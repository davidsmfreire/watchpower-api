[tool.poetry]
name = "watchpower-api"
version = "0.1.0"
description = "WatchPower Rest-API client in Python"
authors = ["David Freire <davidsmfreire@gmail.com>"]
readme = "README.md"
packages = [{include = "watchpower_api"}]

[tool.poetry.dependencies]
python = ">3.8,<4.0"
pydantic = ">=1.0.0,<3.0.0"
requests = ">=2.25.0"

[tool.poetry.group.examples.dependencies]
python-dotenv = "^1.0.1"
pandas = "1.5.3"
tqdm = "^4.67.1"

[tool.poetry.group.dev.dependencies]
python-semantic-release = "^9.15.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
assets = []
version_toml = ["pyproject.toml:tool.poetry.version", ]
version_variables = ["watchpower_api/__init__.py:__version__", ]
build_command = "pip install poetry && poetry build"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"
mask_initial_release = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
other_allowed_tags = ["build", "chore", "ci", "docs", "style", "refactor", "test"]
allowed_tags = ["feat", "fix", "perf", "build", "chore", "ci", "docs", "style", "refactor", "test"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

